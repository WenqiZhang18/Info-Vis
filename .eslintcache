[{"D:\\node\\proj\\Info-Vis\\src\\index.js":"1","D:\\node\\proj\\Info-Vis\\src\\components\\App.js":"2","D:\\node\\proj\\Info-Vis\\src\\serviceWorker.js":"3","D:\\node\\proj\\Info-Vis\\src\\store\\index.js":"4","D:\\node\\proj\\Info-Vis\\src\\components\\AssistView.js":"5","D:\\node\\proj\\Info-Vis\\src\\components\\ControlPanel.js":"6","D:\\node\\proj\\Info-Vis\\src\\components\\DetailView.js":"7","D:\\node\\proj\\Info-Vis\\src\\components\\MapView.js":"8","D:\\node\\proj\\Info-Vis\\src\\store\\api.js":"9"},{"size":385,"mtime":1610778308766,"results":"10","hashOfConfig":"11"},{"size":2116,"mtime":1610792634987,"results":"12","hashOfConfig":"11"},{"size":5227,"mtime":1610778308778,"results":"13","hashOfConfig":"11"},{"size":4701,"mtime":1610792540399,"results":"14","hashOfConfig":"11"},{"size":3760,"mtime":1610787915001,"results":"15","hashOfConfig":"11"},{"size":2048,"mtime":1610787915002,"results":"16","hashOfConfig":"11"},{"size":2184,"mtime":1610794614719,"results":"17","hashOfConfig":"11"},{"size":12486,"mtime":1610792540385,"results":"18","hashOfConfig":"11"},{"size":448,"mtime":1610778308790,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18y6vmj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\node\\proj\\Info-Vis\\src\\index.js",[],"D:\\node\\proj\\Info-Vis\\src\\components\\App.js",["40"],"D:\\node\\proj\\Info-Vis\\src\\serviceWorker.js",[],"D:\\node\\proj\\Info-Vis\\src\\store\\index.js",[],"D:\\node\\proj\\Info-Vis\\src\\components\\AssistView.js",["41"],"// 本文件是一个子视图\r\n\r\nimport React, {useContext} from 'react';\r\nimport {store} from \"../store\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nfunction convertData(state) {\r\n    let res = [];\r\n\r\n    for(let i=0; i<state.inLine.length; i++) {   // YRH 对每一个需要加入的省份\r\n        let state_name = state.inLine[i];\r\n\r\n        let this_state_data = new Array(45).fill(0);\r\n\r\n        state.data.forEach(function(item, index, arr){  // YRH 遍历所有数据列表\r\n            if(item.province_name === state_name){   // YRH 如果为当前省份的某数据列表\r\n\r\n                let former = this_state_data;\r\n                let to_add = (state.mode==='deaths' ? item.deaths_data : item.confirmed_data);\r\n                former.forEach(function(v, index){\r\n                    this_state_data[index] = v + to_add[index];\r\n                })\r\n            }\r\n        })\r\n\r\n        // 每个county的都加完了，push到res里面\r\n        res.push({\r\n            name: state_name,\r\n            type: 'line',\r\n            data: this_state_data,  // YRH 是一个30天的数组\r\n        });\r\n    }\r\n    console.log(res);\r\n    return res;\r\n}\r\n\r\nfunction AssistView() {\r\n    // 使用StateProvider提供的数据环境\r\n    const {state, dispatch} = useContext(store);\r\n    const getOption = () => {\r\n        var option = {\r\n            legend: {\r\n                type: 'scroll',\r\n                top: 15,\r\n                left: 10,\r\n                data:(function (){\r\n                    return state.inLine\r\n                })()\r\n            },\r\n\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    animation: false,\r\n                },\r\n            },\r\n\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '40%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: (function () {\r\n                    var res=[];\r\n                    var i;\r\n                    for(i=0; i<45; i++) {\r\n                        var month = i<15 ? '3' : '4';\r\n                        var day = i<15 ? i+18 : i-14;\r\n                        var date = '2020-' + month + \"-\" + day.toString(10);\r\n                        res.push(date);\r\n                    }\r\n                    return res;\r\n                })(),\r\n                axisLabel: {\r\n                    show: true,\r\n                    interval: 'auto',\r\n                    formatter: function (value, index) {\r\n                        // 格式化成月/日，只在第一个刻度显示年份\r\n                        var date = new Date(value);\r\n                        var texts = [(date.getMonth() + 1), date.getDate()];\r\n                        return texts.join('-');\r\n                    }\r\n                },\r\n                axisPointer: [],\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                boundaryGap: false,\r\n            },\r\n\r\n            yAxis: {\r\n                axisLabel: {\r\n                },\r\n                axisPointer: {\r\n                    snap: true,\r\n                    label: {\r\n                        precision: 0,\r\n                    }\r\n                },\r\n                splitNumber: 3,\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            series: convertData(state)\r\n        };\r\n        return option\r\n    };\r\n\r\n    let onEvents = {\r\n    }\r\n\r\n    return <ReactEcharts option={getOption()}\r\n             style={{height: '300px', width: '100%'}}\r\n             onEvents={onEvents} />;\r\n}\r\n\r\nexport default AssistView;\r\n",["42","43"],"D:\\node\\proj\\Info-Vis\\src\\components\\ControlPanel.js",[],"D:\\node\\proj\\Info-Vis\\src\\components\\DetailView.js",["44"],"D:\\node\\proj\\Info-Vis\\src\\components\\MapView.js",[],"D:\\node\\proj\\Info-Vis\\src\\store\\api.js",[],{"ruleId":"45","severity":1,"message":"46","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":20},{"ruleId":"45","severity":1,"message":"49","line":39,"column":19,"nodeType":"47","messageId":"48","endLine":39,"endColumn":27},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"54","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":24},"no-unused-vars","'ControlPanel' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'ArrowBackSharp' is defined but never used.","no-global-assign","no-unsafe-negation"]